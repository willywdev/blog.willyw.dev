---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  readingTime,
  previous,
  next,
} = Astro.props;
---

<html lang='en'>
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: 100%;
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 15px;
        box-shadow:
          rgba(0, 0, 0, 0.25) 0px 54px 55px,
          rgba(0, 0, 0, 0.12) 0px -12px 30px,
          rgba(0, 0, 0, 0.12) 0px 4px 6px,
          rgba(0, 0, 0, 0.17) 0px 12px 13px,
          rgba(0, 0, 0, 0.09) 0px -3px 5px;
        outline: 1px solid white;
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: #fafafa;
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: #fafafa;
      }
      .last-updated-on {
        font-style: italic;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class='hero-image'>
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt='' />
            )
          }
        </div>
        <div class='prose'>
          <div class='title'>
            <div class='date'>
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class='last-updated-on'>
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <p>Reading Time: {readingTime}</p>
            <hr />
          </div>
          <slot />
        </div>
      </article>
      <div class='flex justify-between px-20'>
        {
          previous ? (
            <a href={previous}>
              <button class='focus:outline-accent relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white dark:text-white focus:ring-4 focus:outline-none'>
                <span class='relative px-5 py-2.5 transition-all ease-in duration-75 bg-[#202020] rounded-md group-hover:bg-opacity-0'>
                  ← Previous Article
                </span>
              </button>
            </a>
          ) : (
            ""
          )
        }
        {
          next ? (
            <a href={next}>
              <button class='focus:outline-accent relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white dark:text-white focus:ring-4 focus:outline-none'>
                <span class='relative px-5 py-2.5 transition-all ease-in duration-75 bg-[#202020] rounded-md group-hover:bg-opacity-0'>
                  Next Article →
                </span>
              </button>
            </a>
          ) : (
            ""
          )
        }
      </div>
    </main>
    <Footer />
  </body>
</html>
